---
# For this ingress to work, it should be deployed the nginx-ingress-controller
# https://kubernetes.github.io/ingress-nginx/
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: tools
  name: cert-test
  annotations:
    kubernetes.io/ingress.class: nginx-external
    nginx.ingress.kubernetes.io/auth-response-headers: x-username, x-groups
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header Ldap-Allowed-Groups "Test Group";
      proxy_set_header Ldap-Allowed-Users "test";
    nginx.ingress.kubernetes.io/auth-url: https://another-ldap-auth.ingress-controllers.svc.cluster.local
    nginx.ingress.kubernetes.io/server-alias: cert-test.sbx.test
    # Enable client certificate authentication
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    # Create the secret containing the trusted ca certificates
    nginx.ingress.kubernetes.io/auth-tls-secret: "tools/cert-test-secret"
    # Specify the verification depth in the client certificates chain
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    # Specify an error page to be redirected to verification errors
    nginx.ingress.kubernetes.io/auth-tls-error-page: "https://www.google.com"
    # Specify if certificates are passed to upstream server
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
spec:
  rules:
  - host: cert-test.sbx.alb.external.internal
    http:
      paths:
      - backend:
          serviceName: penetration
          servicePort: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - cert-test.sbx.alb.external.internal
    secretName: cert-test-secret